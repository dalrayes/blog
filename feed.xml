<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2015-06-19T16:54:00-05:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Middleman, you are driving me crazy</title>
    <link rel="alternate" href="http://blog.url.com/2015/06/19/trying-out-middleman-and-its-driving-me-crazy/"/>
    <id>http://blog.url.com/2015/06/19/trying-out-middleman-and-its-driving-me-crazy/</id>
    <published>2015-06-19T16:54:00-05:00</published>
    <updated>2015-09-21T12:55:02-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Ahhhh. I&amp;#39;ve been trying different ways of setting up Middleman, but honestly its been driving me crazy. If I get the blogging template to work, github doesn&amp;#39;t and so forth. This is another attempt.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Asking Questions &amp; Searching for Answers</title>
    <link rel="alternate" href="http://blog.url.com/2014/12/07/asking-questions/"/>
    <id>http://blog.url.com/2014/12/07/asking-questions/</id>
    <published>2014-12-07T15:54:00-06:00</published>
    <updated>2015-06-22T15:29:35-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Today is the last day of Phase 0 for my cohort at DBC, where we have spent the last 9 weeks learning from home. Working remotely has been interesting and very new to me. While we were in touch with each other for pairing sessions and general discussions on a Google group we are part of, a lot of the work was done on our own. This meant that most of the time, when I needed something clarified or got stuck writing code.... oh hello, Google search.&lt;/p&gt;

&lt;p&gt;A lot of my queries led me to questions that had similar keywords posted on Stack Overflow, the Q&amp;amp;A site for widely used by programmers. But the problem was exactly that - similar keywords. The questions that were posted often had nothing to do with what I was looking for and were unhelpful or had very different responses that just got me more confused.&lt;/p&gt;

&lt;p&gt;To tackle this, I worked on improving my search queries:&lt;/p&gt;

&lt;p&gt;&lt;li&gt;Search the web for something very specific - one logical operation&lt;/li&gt;
&lt;li&gt;Know what you expect your code to do&lt;/li&gt;
&lt;li&gt;Highlight any constraints (i.e &amp;quot;without jQuery&amp;quot;)&lt;/li&gt;
&lt;li&gt;End statement with &amp;quot;in [language]&amp;quot;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;There is plenty of information on the web, but figuring out what to look for really comes down to how well you have broken down the problem at hand (smaller steps to solve it).&lt;/p&gt;

&lt;p&gt;But, even with that, I really struggled with one of our challenges in Phase 0, and was very disappointed when searching online for hours and with multiple different queries was not getting me anywhere. At this point, I realized I had to get some help from someone else, a hint, and that helped me move forward.&lt;/p&gt;

&lt;p&gt;More:
&lt;a href="http://www.catb.org/~esr/faqs/smart-questions.html"&gt;How to Ask Questions the Smart Way&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Blogging</title>
    <link rel="alternate" href="http://blog.url.com/2014/12/07/blogging/"/>
    <id>http://blog.url.com/2014/12/07/blogging/</id>
    <published>2014-12-07T15:54:00-06:00</published>
    <updated>2015-06-22T15:23:58-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Now that I have my own website, I realize how much work and dedication it takes to keep it up to date and relevant. Blogging itself takes work/effort, and once you have readers (far from this point yet), its a commitment. I read a variety of blogs on a weekly basis, previously about general women&amp;#39;s topics, business, design and style. I now have a roll of technology websites, blogs/ newsletters and twitter feeds to add to this list. Although going through them takes time, it is more of an effort to update as well, and it could really lead into a rabbit hole if you want to add so many different things at once!&lt;/p&gt;

&lt;p&gt;I hope to utilize tools to keep the updating process more efficient and take advantage of technologies that will make my website more powerful...sit tight!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Issues in Tech - Bitcoin</title>
    <link rel="alternate" href="http://blog.url.com/2014/11/30/bitcoin/"/>
    <id>http://blog.url.com/2014/11/30/bitcoin/</id>
    <published>2014-11-30T15:54:00-06:00</published>
    <updated>2015-06-24T13:04:33-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="Bitcoin" src="/images/bitcoin.png" /&gt;&lt;/p&gt;

&lt;h2&gt;What is it?&lt;/h2&gt;

&lt;p&gt;Bitcoin is the world’s first crypto-currency, or digital currency. In its simplest form, bitcoin is an open source payment system, where payments are kept track of in a public ledger or spreadsheet, referred to as the &lt;em&gt;block chain&lt;/em&gt;. Unlike fiat money, bitcoin is not backed by gold or currency, and is not regulated by a central bank or government. Bitcoin was introduced in 2009 by Satoshi Nakamato, a person or group of people that remain &lt;a href="http://en.wikipedia.org/wiki/Satoshi_Nakamoto"&gt;unknown&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The price of bitcoin has fluctuated since its launch, with the current price of one bitcoin valued at $377.81. Get the current price here&lt;/p&gt;

&lt;h2&gt;How does it work?&lt;/h2&gt;

&lt;p&gt;To create bitcoins, computers must solve complex mathematical problems, an activity referred to as mining. Users offer their computing power to verify/record payments in the ledger (the block chain) and are rewarded with bitcoins. This sounds easy, but the network automatically adjusts the difficulty of the math problems. The increasing popularity of bitcoin and the use of powerful, mining specific devices (ASICs) has made it difficult and very cost ineffective for individuals to mine. According to the Bitcoin protocol, only 21 million bitcoins can ever be created by miners, with the amount mined to date at 13.5 million. Nevertheless, there are other ways you can get bitcoins, such as buying them directly from other people, or in exchange for goods and services. Bitcoins can be sent and received electronically using exchanges, or wallet softwares, for a small fee.&lt;/p&gt;

&lt;h2&gt;Why is bitcoin so awesome?&lt;/h2&gt;

&lt;p&gt;Although the use of the currency is still tiny compared to the billion dollar credit card and banking industry, bitcoin is a disruptive technology, and is already changing the way we move money or value. Think of the way the internet disrupted the way we move information or communicate. Bitcoin at its core is a transparent monetary system, based on problem solving rather than on biased politicians and central bankers using monetary policy to increase or decrease the money supply. There are many potential applications for bitcoin and possibilities of how it will impact our lives. To start, today it creates an easy, quick, cheap way to make local and international transfers. It could also replace expensive escrow accounts, with movement of money controlled by conditions that are programmed (think: if (conditions met), then (make transfer), else (don’t transfer)).&lt;/p&gt;

&lt;h2&gt;Issues with Bitcoin&lt;/h2&gt;

&lt;p&gt;Despite its positive contributions, bitcoin has its negative aspects. Its anonymous nature makes it appealing for use in illegal activities. Bitcoin has been used for money laundering and for buying illegal substances and weapons on the anonymous web, TOR and the DarkWeb. Other issues are that currency exchanges have been targeted by hackers, and currency holders could risk losing their bitcoins, since they are not backed or insured (i.e the Mt. Gox &lt;a href="http://online.wsj.com/articles/SB10001424052702303801304579410010379087576"&gt;incident&lt;/a&gt; in early 2014).&lt;/p&gt;

&lt;h2&gt;Recent Developments&lt;/h2&gt;

&lt;p&gt;&lt;li&gt;An increasing number of retailers are accepting bitcoin, with San Francisco retailers leading the way&lt;/li&gt;
&lt;li&gt;Undergrad students at the Massachusetts Institute of Technology (MIT) received $100 in bitcoins in Fall 2014 to &amp;quot;better understand the emerging technology&amp;quot;&lt;/li&gt;
&lt;li&gt;PayPal is working to enable certain PayPal merchants to accept bitcoin as a form of payment from their customers.&lt;/li&gt;
&lt;li&gt;There are now bitcoin ATMs (&amp;quot;BTMs&amp;quot;) nationwide. Find them here.&lt;/li&gt;
&lt;li&gt;Conan explains &lt;a href="https://www.youtube.com/watch?v=Vd19SboRhVY"&gt;bitcoin&lt;/a&gt;! #kidding&lt;/li&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Javascript vs Ruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/11/24/javascript-vs-ruby/"/>
    <id>http://blog.url.com/2014/11/24/javascript-vs-ruby/</id>
    <published>2014-11-24T15:54:00-06:00</published>
    <updated>2015-06-24T17:53:08-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h3&gt;Looping Through!&lt;/h3&gt;

&lt;p&gt;A week into using Javascript and I miss Ruby already. Ruby is more intuitive and to the point, but Javascript feels more verbose, like something from English literature&lt;/p&gt;

&lt;p&gt;Below, is an example of an annoying loop using ruby.&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;
  &lt;span class="n"&gt;loopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;loopy&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Are we there yet?"&lt;/span&gt;
    &lt;span class="n"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Finally!"&lt;/span&gt;

    &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'no'&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"nooo"&lt;/span&gt;

    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'stop'&lt;/span&gt;
      &lt;span class="n"&gt;loopy&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;

    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the other hand, if we were to do something similar in Javascript it would look something like this:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="nx"&gt;loopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loopy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Are we there yet?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"yes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Finally!!!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"no"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Nooo!!!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;loopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although they look fairly similar, Javascript requires much more syntax (brackets and colons) than ruby. For looping, in addition to &lt;em&gt;while&lt;/em&gt;, &lt;em&gt;for&lt;/em&gt; and &lt;em&gt;for...in&lt;/em&gt; loops, ruby provides methods &lt;em&gt;until&lt;/em&gt;, &lt;em&gt;each&lt;/em&gt;, and &lt;em&gt;times&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;li&gt;More on Ruby loops &lt;a href="http://www.tutorialspoint.com/ruby/ruby_loops.htm"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More on Javascript loops &lt;a href="http://www.w3schools.com/js/js_loop_for.asp"&gt;here&lt;/a&gt; and &lt;a href="http://www.w3schools.com/js/js_loop_while.asp"&gt;here&lt;/a&gt;&lt;/li&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Inheritance &amp; Composition</title>
    <link rel="alternate" href="http://blog.url.com/2014/11/16/inheritance-and-composition/"/>
    <id>http://blog.url.com/2014/11/16/inheritance-and-composition/</id>
    <published>2014-11-16T15:54:00-06:00</published>
    <updated>2015-06-24T12:52:25-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;In Ruby, we use classes to group the behaviors, or methods, that objects can use. To connect these classes, we have several options, among them are inheritance and composition.&lt;/p&gt;

&lt;h2&gt;Inheritance&lt;/h2&gt;

&lt;p&gt;&lt;li&gt;Inheritance allows one class (child, sub-class) to get most or all features from another class (parent, superclass). The sub-class is usually a specialized form of its super class.&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;A sub-class can only have one super-class. This is called single inheritance. A superclass can have many subclasses.&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;In the real world, a child inherits certain traits from his / her parent. In Ruby, this is called implicit inheritance, where a subclass inherits methods of a parent class.&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;In Ruby, a subclass can also choose to change certain parent methods, or override them. Unfortunately, we do not have that option as humans! Ruby also allows the subclass to call a parent&amp;#39;s method using (super).&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Homer&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;skintone&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Skintone: yellow"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_top&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"White polo"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Blue bottom"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bart&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Homer&lt;/span&gt;     &lt;span class="c1"&gt;#inheritance illustrates an "is a" relationship&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_top&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Red t-shirt"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Blue shorts"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"--or alternatively--"&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;homer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;


&lt;span class="c1"&gt;#Implicit Inheritance&lt;/span&gt;
&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;skintone&lt;/span&gt;          &lt;span class="c1"&gt;#Skintone: yellow&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;skintone&lt;/span&gt;           &lt;span class="c1"&gt;#Skintone: yellow&lt;/span&gt;

&lt;span class="c1"&gt;#Overriding Inheritance&lt;/span&gt;
&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_top&lt;/span&gt;      &lt;span class="c1"&gt;#White polo&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_top&lt;/span&gt;       &lt;span class="c1"&gt;#Red t-shirt&lt;/span&gt;

&lt;span class="c1"&gt;#Calling the parent's method using Super&lt;/span&gt;
&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;   &lt;span class="c1"&gt;#Blue Bottom&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;    &lt;span class="c1"&gt;#Blue shorts&lt;/span&gt;
                        &lt;span class="c1"&gt;#--or alternatively--&lt;/span&gt;
                        &lt;span class="c1"&gt;#Blue bottom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although inheritance makes it easy to access methods of a parent class easily, it increases complexity when the code grows in size, multiple subclasses are added and new functions are added to the parent class. Overtime, it may appear that there is less and less in common between the super class and sub classes, but the linkage is too deep to alter, causing difficulties with your code.&lt;/p&gt;

&lt;h2&gt;Composition&lt;/h2&gt;

&lt;p&gt;Composition is an alternative to inheritance; it links classes but allows objects to be independent of each other.&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Homer&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;skintone&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Skintone: yellow"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_top&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"White polo"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Blue bottom"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bart&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="vi"&gt;@dad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;    &lt;span class="c1"&gt;#composition illustrates a "has a" relationship&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;skintone&lt;/span&gt;
    &lt;span class="vi"&gt;@dad&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;skintone&lt;/span&gt;       &lt;span class="c1"&gt;#added in the Bart class but calls the Homer method&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_top&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Red t-shirt"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Blue shorts"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"--or alternatively--"&lt;/span&gt;
    &lt;span class="vi"&gt;@dad&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;homer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;


&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;skintone&lt;/span&gt;          &lt;span class="c1"&gt;#Skintone: yellow&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;skintone&lt;/span&gt;           &lt;span class="c1"&gt;#Skintone: yellow&lt;/span&gt;

&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_top&lt;/span&gt;      &lt;span class="c1"&gt;#White polo&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_top&lt;/span&gt;       &lt;span class="c1"&gt;#Red t-shirt&lt;/span&gt;

&lt;span class="n"&gt;homer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;   &lt;span class="c1"&gt;#Blue Bottom&lt;/span&gt;
&lt;span class="n"&gt;bart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clothing_bottom&lt;/span&gt;    &lt;span class="c1"&gt;#Blue shorts&lt;/span&gt;
                        &lt;span class="c1"&gt;#--or alternatively--&lt;/span&gt;
                        &lt;span class="c1"&gt;#Blue bottom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, the resulting output is the same as what was done with inheritance.&lt;/p&gt;
</content>
  </entry>
</feed>
